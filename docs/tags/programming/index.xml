<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on asktao</title>
    <link>https://asktao.github.io/tags/programming/</link>
    <description>Recent content in programming on asktao</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 09 Oct 2021 10:44:00 +0800</lastBuildDate><atom:link href="https://asktao.github.io/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python List 的两种排序</title>
      <link>https://asktao.github.io/posts/python-list-%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Sat, 09 Oct 2021 10:44:00 +0800</pubDate>
      
      <guid>https://asktao.github.io/posts/python-list-%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%8E%92%E5%BA%8F/</guid>
      <description># import a groupby() method # from itertools module from itertools import groupby # dictionary INFO = [ {&amp;#39;employee&amp;#39;: &amp;#39;XYZ_1&amp;#39;, &amp;#39;company&amp;#39;: &amp;#39;ABC_1&amp;#39;}, {&amp;#39;employee&amp;#39;: &amp;#39;XYZ_2&amp;#39;, &amp;#39;company&amp;#39;: &amp;#39;ABC_2&amp;#39;}, {&amp;#39;employee&amp;#39;: &amp;#39;XYZ_3&amp;#39;, &amp;#39;company&amp;#39;: &amp;#39;ABC_3&amp;#39;}, {&amp;#39;employee&amp;#39;: &amp;#39;XYZ_4&amp;#39;, &amp;#39;company&amp;#39;: &amp;#39;ABC_3&amp;#39;}, {&amp;#39;employee&amp;#39;: &amp;#39;XYZ_5&amp;#39;, &amp;#39;company&amp;#39;: &amp;#39;ABC_2&amp;#39;}, {&amp;#39;employee&amp;#39;: &amp;#39;XYZ_6&amp;#39;, &amp;#39;company&amp;#39;: &amp;#39;ABC_3&amp;#39;}, {&amp;#39;employee&amp;#39;: &amp;#39;XYZ_7&amp;#39;, &amp;#39;company&amp;#39;: &amp;#39;ABC_1&amp;#39;}, {&amp;#39;employee&amp;#39;: &amp;#39;XYZ_8&amp;#39;, &amp;#39;company&amp;#39;: &amp;#39;ABC_2&amp;#39;}, {&amp;#39;employee&amp;#39;: &amp;#39;XYZ_9&amp;#39;, &amp;#39;company&amp;#39;: &amp;#39;ABC_1&amp;#39;} ] # define a fuction for key def key_func(k): return k[&amp;#39;company&amp;#39;] # sort INFO data by &amp;#39;company&amp;#39; key.</description>
    </item>
    
    <item>
      <title>Python3 中的四舍五入</title>
      <link>https://asktao.github.io/posts/python3-%E4%B8%AD%E7%9A%84%E5%9B%9B%E8%88%8D%E4%BA%94%E5%85%A5/</link>
      <pubDate>Sat, 09 Oct 2021 10:41:06 +0800</pubDate>
      
      <guid>https://asktao.github.io/posts/python3-%E4%B8%AD%E7%9A%84%E5%9B%9B%E8%88%8D%E4%BA%94%E5%85%A5/</guid>
      <description>最近在项目中遇到前后端计算数值不一样的情况，发现是由于 Python3 数学运算处理方式和 PHP BC Math 不一样
PHP 的 round 函数
round ( float $val , int $precision = 0 , int $mode = PHP_ROUND_HALF_UP ) : float    Constants Description     PHP_ROUND_HALF_UP Rounds num away from zero when it is half way there, making 1.5 into 2 and -1.5 into -2.   PHP_ROUND_HALF_DOWN Rounds num towards zero when it is half way there,making 1.</description>
    </item>
    
    <item>
      <title>算法比较</title>
      <link>https://asktao.github.io/posts/%E7%AE%97%E6%B3%95%E6%AF%94%E8%BE%83/</link>
      <pubDate>Sat, 09 Oct 2021 10:40:16 +0800</pubDate>
      
      <guid>https://asktao.github.io/posts/%E7%AE%97%E6%B3%95%E6%AF%94%E8%BE%83/</guid>
      <description>计算 1+2+3+……+100 结果的程序
int i, sum = 0, n = 100; for (i = 1; i &amp;lt;= n; i++) { sum = sum + i; } printf(&amp;#34;%d&amp;#34;, sum); 高斯
int sum = 0, n = 100; sum = (1 + n) * n/2; printf(&amp;#34;%d&amp;#34;, sum); </description>
    </item>
    
    <item>
      <title>Go vs PHP Syntax Comparison</title>
      <link>https://asktao.github.io/posts/go-vs-php-syntax-comparison/</link>
      <pubDate>Sat, 09 Oct 2021 10:35:50 +0800</pubDate>
      
      <guid>https://asktao.github.io/posts/go-vs-php-syntax-comparison/</guid>
      <description>Data types PHP types:
bool string int //Integer float array object NULL resource Go types:
string bool int int8 int16 int32 int64 uint uint8 uint16 uint32 uint64 uintptr byte //uint8 rune //int32 float32 float64 complex64 complex128 array slices map struct Variables Variable declarations
   Go PHP     var i int $i = 0 // integer   var f float64 $f = 0.0 // float   var b bool $b = false // boolean   var s string $s = &amp;quot;&amp;quot; // string   var a [2]string $a = [] // array    Short variable declarations</description>
    </item>
    
    <item>
      <title>软件应该具备的能力</title>
      <link>https://asktao.github.io/posts/%E8%BD%AF%E4%BB%B6%E5%BA%94%E8%AF%A5%E5%85%B7%E5%A4%87%E7%9A%84%E8%83%BD%E5%8A%9B/</link>
      <pubDate>Sat, 09 Oct 2021 10:30:49 +0800</pubDate>
      
      <guid>https://asktao.github.io/posts/%E8%BD%AF%E4%BB%B6%E5%BA%94%E8%AF%A5%E5%85%B7%E5%A4%87%E7%9A%84%E8%83%BD%E5%8A%9B/</guid>
      <description>安全 一个软件无论是服务端、客户端又或传输过程中安全无法保障无异于把客户、用户的信息泄露，服务端更甚于泄露所有客户、用户的所有信息。
稳定 没有客户、用户接受使用经常宕机的服务。
速度快 客户、用户不会花更长时间等待软件的响应，更有电商对此印证</description>
    </item>
    
    <item>
      <title>Laravel 使用联合主键</title>
      <link>https://asktao.github.io/posts/laravel-%E4%BD%BF%E7%94%A8%E8%81%94%E5%90%88%E4%B8%BB%E9%94%AE/</link>
      <pubDate>Sat, 09 Oct 2021 10:19:02 +0800</pubDate>
      
      <guid>https://asktao.github.io/posts/laravel-%E4%BD%BF%E7%94%A8%E8%81%94%E5%90%88%E4%B8%BB%E9%94%AE/</guid>
      <description>在 Model 中表示方式
protected $primaryKey = [&amp;#39;key_one&amp;#39;, &amp;#39;key_two&amp;#39;]; public $incrementing = false; </description>
    </item>
    
    <item>
      <title>PHP 不用函数翻转字符串</title>
      <link>https://asktao.github.io/posts/php-%E4%B8%8D%E7%94%A8%E5%87%BD%E6%95%B0%E7%BF%BB%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Sat, 09 Oct 2021 10:17:27 +0800</pubDate>
      
      <guid>https://asktao.github.io/posts/php-%E4%B8%8D%E7%94%A8%E5%87%BD%E6%95%B0%E7%BF%BB%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>$str = &amp;#39;hello&amp;#39;; $newstr = &amp;#39;&amp;#39;; $i = 0; while (!empty($str[$i])) { $newstr = $str[$i].$newstr; $i++; } echo $newstr; </description>
    </item>
    
    <item>
      <title>How to Avoid Floating Point Math Error in PHP and Python</title>
      <link>https://asktao.github.io/posts/how-to-avoid-floating-point-math-error-in-php-and-python/</link>
      <pubDate>Thu, 07 Oct 2021 15:28:09 +0800</pubDate>
      
      <guid>https://asktao.github.io/posts/how-to-avoid-floating-point-math-error-in-php-and-python/</guid>
      <description>php -r &amp;#34;var_dump(intval(0.58 * 100));” int(57) python3 &amp;gt;&amp;gt;&amp;gt;print(0.58*100)57.99999999999999 other languages http://0.30000000000000004.com
how did this happen http://www.laruence.com/2013/03/26/2884.html
Mathematical extensions in php and decimal module in python to avoid this
php -r &amp;#34;var_dump(intval(bcmul(&amp;#39;0.58&amp;#39;, &amp;#39;100&amp;#39;)));&amp;#34; int(58) &amp;gt;&amp;gt;&amp;gt; from decimal import Decimal &amp;gt;&amp;gt;&amp;gt; from decimal import getcontext &amp;gt;&amp;gt;&amp;gt; print(Decimal(&amp;#39;0.58&amp;#39;) * Decimal(&amp;#39;100&amp;#39;)) 58.00 </description>
    </item>
    
  </channel>
</rss>
